---
- name: Install Python kubernetes library
  apt:
    name: python3-kubernetes
    state: present
    update_cache: yes
  become: yes

- name: Create ArgoCD namespace
  shell: kubectl create namespace {{ argocd_namespace }} --dry-run=client -o yaml | kubectl apply -f -
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"
  become: no

- name: Download and apply ArgoCD manifests
  shell: |
    curl -sSL {{ argocd_manifest_url }} | kubectl apply -n {{ argocd_namespace }} -f -
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"
  become: no

- name: Wait for ArgoCD server deployment
  shell: kubectl wait --for=condition=available --timeout=600s deployment/argocd-server -n {{ argocd_namespace }}
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"
  become: no

- name: Get ArgoCD admin password
  shell: kubectl -n {{ argocd_namespace }} get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
  register: argocd_password
  environment:
    KUBECONFIG: "/home/{{ ansible_user }}/.kube/config"
  become: no

- name: Display ArgoCD access information
  debug:
    msg: |
      ArgoCD is ready!
      Access: kubectl port-forward svc/argocd-server -n argocd 8080:443
      Username: admin
      Password: {{ argocd_password.stdout }}