# Argo CD Server and Application Controller
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: application-controller
    app.kubernetes.io/name: argocd-application-controller
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller
  namespace: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-application-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-application-controller
    spec:
      serviceAccountName: argocd-application-controller
      containers:
        - name: application-controller
          image: quay.io/argoproj/argocd:v2.8.4
          imagePullPolicy: Always
          command:
            - argocd-application-controller
          env:
            - name: ARGOCD_CONTROLLER_REPLICAS
              value: "1"
            - name: ARGOCD_RECONCILIATION_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: timeout.reconciliation
                  name: argocd-cm
                  optional: true
            - name: ARGOCD_HARD_RECONCILIATION_TIMEOUT
              valueFrom:
                configMapKeyRef:
                  key: timeout.hard.reconciliation
                  name: argocd-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER
              valueFrom:
                configMapKeyRef:
                  key: repo.server
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_TIMEOUT_SECONDS
              valueFrom:
                configMapKeyRef:
                  key: controller.repo.server.timeout.seconds
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_STATUS_PROCESSORS
              valueFrom:
                configMapKeyRef:
                  key: controller.status.processors
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_OPERATION_PROCESSORS
              valueFrom:
                configMapKeyRef:
                  key: controller.operation.processors
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_LOGFORMAT
              valueFrom:
                configMapKeyRef:
                  key: controller.log.format
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: controller.log.level
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_METRICS_CACHE_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  key: controller.metrics.cache.expiration
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_SELF_HEAL_TIMEOUT_SECONDS
              valueFrom:
                configMapKeyRef:
                  key: controller.self.heal.timeout.seconds
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APPLICATION_CONTROLLER_REPO_SERVER_PLAINTEXT
              valueFrom:
                configMapKeyRef:
                  key: controller.repo.server.plaintext
                  name: argocd-cmd-params-cm
                  optional: true
          ports:
            - containerPort: 8082
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8082
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - mountPath: /app/config/controller/tls
              name: argocd-repo-server-tls
            - mountPath: /home/argocd
              name: argocd-home
      volumes:
        - name: argocd-repo-server-tls
          secret:
            secretName: argocd-repo-server-tls
            optional: true
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
        - emptyDir: {}
          name: argocd-home
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
  name: argocd-server
  namespace: argocd
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-server
    spec:
      serviceAccountName: argocd-server
      containers:
        - name: server
          image: quay.io/argoproj/argocd:v2.8.4
          imagePullPolicy: Always
          command:
            - argocd-server
          env:
            - name: ARGOCD_SERVER_INSECURE
              valueFrom:
                configMapKeyRef:
                  key: server.insecure
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_BASEHREF
              valueFrom:
                configMapKeyRef:
                  key: server.basehref
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_ROOTPATH
              valueFrom:
                configMapKeyRef:
                  key: server.rootpath
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_LOGFORMAT
              valueFrom:
                configMapKeyRef:
                  key: server.log.format
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_LOGLEVEL
              valueFrom:
                configMapKeyRef:
                  key: server.log.level
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_REPO_SERVER
              valueFrom:
                configMapKeyRef:
                  key: repo.server
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_DEX_SERVER
              valueFrom:
                configMapKeyRef:
                  key: server.dex.server
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_DISABLE_AUTH
              valueFrom:
                configMapKeyRef:
                  key: server.disable.auth
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_ENABLE_PROXY_EXTENSION
              valueFrom:
                configMapKeyRef:
                  key: server.enable.proxy.extension
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_REPO_SERVER_PLAINTEXT
              valueFrom:
                configMapKeyRef:
                  key: server.repo.server.plaintext
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_REPO_SERVER_STRICT_TLS
              valueFrom:
                configMapKeyRef:
                  key: server.repo.server.strict.tls
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_DEX_SERVER_PLAINTEXT
              valueFrom:
                configMapKeyRef:
                  key: server.dex.server.plaintext
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_DEX_SERVER_STRICT_TLS
              valueFrom:
                configMapKeyRef:
                  key: server.dex.server.strict.tls
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_TLS_MIN_VERSION
              valueFrom:
                configMapKeyRef:
                  key: server.tls.minversion
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_TLS_MAX_VERSION
              valueFrom:
                configMapKeyRef:
                  key: server.tls.maxversion
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_TLS_CIPHERS
              valueFrom:
                configMapKeyRef:
                  key: server.tls.ciphers
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_CONNECTION_STATUS_CACHE_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  key: server.connection.status.cache.expiration
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_OIDC_CACHE_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  key: server.oidc.cache.expiration
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_LOGIN_ATTEMPTS_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  key: server.login.attempts.expiration
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_SERVER_STATIC_ASSETS
              valueFrom:
                configMapKeyRef:
                  key: server.staticassets
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_APP_STATE_CACHE_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  key: server.app.state.cache.expiration
                  name: argocd-cmd-params-cm
                  optional: true
            - name: REDIS_SERVER
              valueFrom:
                configMapKeyRef:
                  key: redis.server
                  name: argocd-cmd-params-cm
                  optional: true
            - name: REDIS_COMPRESSION
              valueFrom:
                configMapKeyRef:
                  key: redis.compression
                  name: argocd-cmd-params-cm
                  optional: true
            - name: REDISDB
              valueFrom:
                configMapKeyRef:
                  key: redis.db
                  name: argocd-cmd-params-cm
                  optional: true
            - name: ARGOCD_DEFAULT_CACHE_EXPIRATION
              valueFrom:
                configMapKeyRef:
                  key: server.default.cache.expiration
                  name: argocd-cmd-params-cm
                  optional: true
          ports:
            - containerPort: 8080
            - containerPort: 8083
          livenessProbe:
            httpGet:
              path: /healthz?full=true
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 256Mi
          volumeMounts:
            - mountPath: /app/config/ssh
              name: ssh-known-hosts
            - mountPath: /app/config/tls
              name: tls-certs
            - mountPath: /app/config/server/tls
              name: argocd-server-tls
            - mountPath: /app/config/dex/tls
              name: argocd-dex-server-tls
            - mountPath: /home/argocd
              name: plugins-home
            - mountPath: /tmp
              name: tmp
      volumes:
        - emptyDir: {}
          name: plugins-home
        - emptyDir: {}
          name: tmp
        - configMap:
            name: argocd-ssh-known-hosts-cm
          name: ssh-known-hosts
        - configMap:
            name: argocd-tls-certs-cm
          name: tls-certs
        - name: argocd-server-tls
          secret:
            secretName: argocd-server-tls
            optional: true
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
        - name: argocd-dex-server-tls
          secret:
            secretName: argocd-dex-server-tls
            optional: true
            items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: server
    app.kubernetes.io/name: argocd-server
    app.kubernetes.io/part-of: argocd
  name: argocd-server
  namespace: argocd
spec:
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 8080
    - name: grpc
      port: 443
      protocol: TCP
      targetPort: 8080
  selector:
    app.kubernetes.io/name: argocd-server
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/name: argocd-server-metrics
    app.kubernetes.io/part-of: argocd
  name: argocd-server-metrics
  namespace: argocd
spec:
  ports:
    - name: metrics
      port: 8083
      protocol: TCP
      targetPort: 8083
  selector:
    app.kubernetes.io/name: argocd-server
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/name: argocd-application-controller-metrics
    app.kubernetes.io/part-of: argocd
  name: argocd-application-controller-metrics
  namespace: argocd
spec:
  ports:
    - name: metrics
      port: 8082
      protocol: TCP
      targetPort: 8082
  selector:
    app.kubernetes.io/name: argocd-application-controller
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-ssh-known-hosts-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-ssh-known-hosts-cm
  namespace: argocd
data:
  ssh_known_hosts: |
    # GitHub
    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    # GitLab
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
    gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7k0VhjaxrXhyJyizPnFRyjr7WoVdKZdZraLPVfiQnYz7wNOhzKuUBq+ztPdKHd+H72Ik6EkRgjAhHFhfzFvGf7P+nBPXRKeSBKRhYYQOGPLdaALBfb2GkJQhwWZA6rFQbrVwE1ppVGzCgkO9L58Re8OOaGzQiLuBtXXkbHog+DpDhp4PQP5PdLluMdVebFDSMZBxQjvH+DjHoTRiZXtR7oiDiQBeFWhB/XF
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-tls-certs-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-tls-certs-cm
  namespace: argocd
data: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: argocd-gpg-keys-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-gpg-keys-cm
  namespace: argocd
data: {}
