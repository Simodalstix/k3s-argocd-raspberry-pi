---
- name: Create namespaces
  kubernetes.core.k8s:
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
    state: present
  loop:
    - argocd
    - monitoring
    - loki
    - velero

- name: Create USB storage class
  kubernetes.core.k8s:
    definition:
      apiVersion: storage.k8s.io/v1
      kind: StorageClass
      metadata:
        name: usb-storage
      provisioner: rancher.io/local-path
      reclaimPolicy: Retain
      volumeBindingMode: WaitForFirstConsumer
      allowVolumeExpansion: true
      parameters:
        nodePath: "{{ usb_mount_point }}"

- name: Create persistent volume claims
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: "{{ item.name }}"
        namespace: "{{ item.namespace }}"
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: usb-storage
        resources:
          requests:
            storage: "{{ item.size }}"
  loop:
    - { name: postgres-data, namespace: default, size: 2Gi }
    - { name: prometheus-data, namespace: monitoring, size: 3Gi }
    - { name: loki-data, namespace: loki, size: 2Gi }

- name: Create app config map
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: app-config
        namespace: default
      data:
        DATABASE_HOST: postgres-service
        DATABASE_PORT: "5432"
        DATABASE_NAME: appdb
        LOG_LEVEL: info
        METRICS_ENABLED: "true"